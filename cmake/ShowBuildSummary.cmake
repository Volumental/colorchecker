string(TOUPPER ${CMAKE_BUILD_TYPE} _BUILD_TYPE_NAME_UPPERCASE)
get_directory_property(_COMPILE_OPTIONS COMPILE_OPTIONS)
get_directory_property(_COMPILE_DEFINITIONS COMPILE_DEFINITIONS)

get_property(_CCACHE_PROPERY GLOBAL PROPERTY RULE_LAUNCH_COMPILE)
if(CMAKE_CXX_COMPILER MATCHES "ccache" OR _CCACHE_PROPERY MATCHES "ccache")
    set(_USING_CCACHE "Yes")
else()
    set(_USING_CCACHE "No")
endif()

get_cmake_property(_ALL_CACHE_VARIABLES CACHE_VARIABLES)
list(REMOVE_ITEM _ALL_CACHE_VARIABLES "BUILD_SHARED_LIBS")
foreach(cache_variable ${_ALL_CACHE_VARIABLES})
    if (cache_variable MATCHES "^BUILD_")
        # That requires unforuntely two ifs, because constants can only be evaluated
        # that way.
        if (NOT ${${cache_variable}})
            list(APPEND _DISABLED_LIBRARIES ${cache_variable})
        endif()
    endif()
endforeach()

message(STATUS "----------------------------------------------------------")
message(STATUS "           Build configuration                            ")
message(STATUS "----------------------------------------------------------")
message(STATUS "Build type:      ${CMAKE_BUILD_TYPE}")
message(STATUS "Use CUDA:        ${BUILD_CUDA}")
message(STATUS "CUDA Version:    ${CUDA_VERSION}")
message(STATUS "CUDA C compiler: ${CUDA_HOST_COMPILER}")
message(STATUS "Shared libs:     ${BUILD_SHARED_LIBS}")
message(STATUS "Used compiler:   ${CMAKE_CXX_COMPILER_ID}")
message(STATUS "Using ccache:    ${_USING_CCACHE}")
message(STATUS "CXX Flags:       ${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_${_BUILD_TYPE_NAME_UPPERCASE}}")
message(STATUS "C   Flags:       ${CMAKE_C_FLAGS} ${CMAKE_C_FLAGS_${_BUILD_TYPE_NAME_UPPERCASE}}")
message(STATUS "Compile options: ${_COMPILE_DEFINITIONS}")
if (NOT FSANITIZER STREQUAL "")
    message(STATUS "-fsanitize       ${FSANITIZER}")
endif()
message(STATUS "----------------------------------------------------------")
message(STATUS "             SIMD status")
message(STATUS "Use SSE 4.1: ${USE_SSE41}")
message(STATUS "Use AVX:     ${USE_AVX}")
message(STATUS "Use FMA:     ${USE_FMA}")
message(STATUS "----------------------------------------------------------")
message(STATUS "             KOMB library status")
message(STATUS "Disabled libraries: ${_DISABLED_LIBRARIES}")
message(STATUS "----------------------------------------------------------")
